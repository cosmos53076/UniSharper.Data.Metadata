// NOTE: This script generated by editor automatically. No need to edit manually!
// ReSharper disable RedundantUsingDirective

using UnityEngine.Scripting;
using UniSharper.Data.Metadata;
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable UnusedMember.Global

namespace UniSharper.Data.Metadata.Samples
{
	/// <summary>
	/// SampleMetadata
	/// Note: Generated by Editor automatically. Please don't edit this file manually!
	/// </summary>
	public partial class SampleMetadata : MetadataEntity
	{
		/// <summary>
		/// enum value
		/// </summary>
		public enum EnumSampleEnum
		{
			None,
			TestEnumType1
		}


		/// <summary>
		/// ID
		/// </summary>
		public long ID { get; set; }

		/// <summary>
		/// string value
		/// </summary>
		public string StringSample { get; set; }

		/// <summary>
		/// bool value
		/// </summary>
		public bool BooleanSample { get; set; }

		/// <summary>
		/// byte value
		/// </summary>
		public byte ByteSample { get; set; }

		/// <summary>
		/// sbyte value
		/// </summary>
		public sbyte SByteSample { get; set; }

		/// <summary>
		/// short value
		/// </summary>
		public short Int16Sample { get; set; }

		/// <summary>
		/// ushort value
		/// </summary>
		public ushort UInt16Sample { get; set; }

		/// <summary>
		/// int value
		/// </summary>
		public int Int32Sample { get; set; }

		/// <summary>
		/// uint value
		/// </summary>
		public uint UInt32Sample { get; set; }

		/// <summary>
		/// long value
		/// </summary>
		public long Int64Sample { get; set; }

		/// <summary>
		/// ulong value
		/// </summary>
		public ulong UInt64Sample { get; set; }

		/// <summary>
		/// float value
		/// </summary>
		public float SingleSample { get; set; }

		/// <summary>
		/// double value
		/// </summary>
		public double DoubleSample { get; set; }

		/// <summary>
		/// decimal value
		/// </summary>
		public decimal DecimalSample { get; set; }

		/// <summary>
		/// enum value
		/// </summary>
		public int EnumSampleValue { get; set; }

		/// <summary>
		/// enum value
		/// </summary>
		public EnumSampleEnum EnumSample => (EnumSampleEnum)EnumSampleValue;

		/// <summary>
		/// Vector2 value
		/// </summary>
		public float[] Vector2SampleValue { get; set; }

		/// <summary>
		/// Vector2 value
		/// </summary>
		public UnityEngine.Vector2 Vector2Sample => new(Vector2SampleValue[0], Vector2SampleValue[1]);

		/// <summary>
		/// Vector2Int value
		/// </summary>
		public int[] Vector2IntSampleValue { get; set; }

		/// <summary>
		/// Vector2Int value
		/// </summary>
		public UnityEngine.Vector2Int Vector2IntSample => new(Vector2IntSampleValue[0], Vector2IntSampleValue[1]);

		/// <summary>
		/// Vector3 value
		/// </summary>
		public float[] Vector3SampleValue { get; set; }

		/// <summary>
		/// Vector3 value
		/// </summary>
		public UnityEngine.Vector3 Vector3Sample => new(Vector3SampleValue[0], Vector3SampleValue[1], Vector3SampleValue[2]);

		/// <summary>
		/// Vector3Int value
		/// </summary>
		public int[] Vector3IntSampleValue { get; set; }

		/// <summary>
		/// Vector3Int value
		/// </summary>
		public UnityEngine.Vector3Int Vector3IntSample => new(Vector3IntSampleValue[0], Vector3IntSampleValue[1], Vector3IntSampleValue[2]);

		/// <summary>
		/// Vector4 value
		/// </summary>
		public float[] Vector4SampleValue { get; set; }

		/// <summary>
		/// Vector4 value
		/// </summary>
		public UnityEngine.Vector4 Vector4Sample => new(Vector4SampleValue[0], Vector4SampleValue[1], Vector4SampleValue[2], Vector4SampleValue[3]);

		/// <summary>
		/// RangeInt value
		/// </summary>
		public int[] RangeIntSampleValue { get; set; }

		/// <summary>
		/// RangeInt value
		/// </summary>
		public UnityEngine.RangeInt RangeIntSample => new(RangeIntSampleValue[0], RangeIntSampleValue[1]);

		/// <summary>
		/// Quaternion value
		/// </summary>
		public float[] QuaternionSampleValue { get; set; }

		/// <summary>
		/// Quaternion value
		/// </summary>
		public UnityEngine.Quaternion QuaternionSample => new(QuaternionSampleValue[0], QuaternionSampleValue[1], QuaternionSampleValue[2], QuaternionSampleValue[3]);

		/// <summary>
		/// Rect value
		/// </summary>
		public float[] RectSampleValue { get; set; }

		/// <summary>
		/// Rect value
		/// </summary>
		public UnityEngine.Rect RectSample => new(RectSampleValue[0], RectSampleValue[1], RectSampleValue[2], RectSampleValue[3]);

		/// <summary>
		/// RectInt value
		/// </summary>
		public int[] RectIntSampleValue { get; set; }

		/// <summary>
		/// RectInt value
		/// </summary>
		public UnityEngine.RectInt RectIntSample => new(RectIntSampleValue[0], RectIntSampleValue[1], RectIntSampleValue[2], RectIntSampleValue[3]);

		/// <summary>
		/// Color value
		/// </summary>
		public float[] ColorSampleValue { get; set; }

		/// <summary>
		/// Color value
		/// </summary>
		public UnityEngine.Color ColorSample => new(ColorSampleValue[0], ColorSampleValue[1], ColorSampleValue[2], ColorSampleValue[3]);

		/// <summary>
		/// Color32 value
		/// </summary>
		public byte[] Color32SampleValue { get; set; }

		/// <summary>
		/// Color32 value
		/// </summary>
		public UnityEngine.Color32 Color32Sample => new(Color32SampleValue[0], Color32SampleValue[1], Color32SampleValue[2], Color32SampleValue[3]);

		/// <summary>
		/// string array
		/// </summary>
		public string[] StringArraySample { get; set; }

		/// <summary>
		/// bool array
		/// </summary>
		public bool[] BooleanArraySample { get; set; }

		/// <summary>
		/// byte array
		/// </summary>
		public byte[] ByteArraySample { get; set; }

		/// <summary>
		/// sbyte array
		/// </summary>
		public sbyte[] SByteArraySample { get; set; }

		/// <summary>
		/// short array
		/// </summary>
		public short[] Int16ArraySample { get; set; }

		/// <summary>
		/// ushort array
		/// </summary>
		public ushort[] UInt16ArraySample { get; set; }

		/// <summary>
		/// int array
		/// </summary>
		public int[] Int32ArraySample { get; set; }

		/// <summary>
		/// uint array
		/// </summary>
		public uint[] UInt32ArraySample { get; set; }

		/// <summary>
		/// long array
		/// </summary>
		public long[] Int64ArraySample { get; set; }

		/// <summary>
		/// ulong array
		/// </summary>
		public ulong[] UInt64ArraySample { get; set; }

		/// <summary>
		/// float array
		/// </summary>
		public float[] SingleArraySample { get; set; }

		/// <summary>
		/// double array
		/// </summary>
		public double[] DoubleArraySample { get; set; }

		/// <summary>
		/// decimal array
		/// </summary>
		public decimal[] DecimalArraySample { get; set; }

		/// <summary>
		/// Initializes a new instance of the <see cref="SampleMetadata"/> class.
		/// </summary>
		[Preserve]
		public SampleMetadata()
		{
		}
	}
}
