// NOTE: This script generated by editor automatically. No need to edit manually!

using UnityEngine.Scripting;
using UniSharper.Data.Metadata;

namespace UniSharper.Data.Metadata.Samples
{
	/// <summary>
	/// SampleMetadata
	/// Note: Generated by Editor automatically. Please don't edit this file manually!
	/// </summary>
	public partial class SampleMetadata : MetadataEntity
	{
		/// <summary>
		/// enum value
		/// </summary>
		public enum EnumSampleEnum
		{
			None,
			TestEnumType1
		}


		/// <summary>
		/// ID
		/// </summary>
		public long ID { get; set; }

		/// <summary>
		/// string value
		/// </summary>
		public string StringSample { get; set; }

		/// <summary>
		/// bool value
		/// </summary>
		public bool BooleanSample { get; set; }

		/// <summary>
		/// byte value
		/// </summary>
		public byte ByteSample { get; set; }

		/// <summary>
		/// sbyte value
		/// </summary>
		public sbyte SByteSample { get; set; }

		/// <summary>
		/// short value
		/// </summary>
		public short Int16Sample { get; set; }

		/// <summary>
		/// ushort value
		/// </summary>
		public ushort UInt16Sample { get; set; }

		/// <summary>
		/// int value
		/// </summary>
		public int Int32Sample { get; set; }

		/// <summary>
		/// uint value
		/// </summary>
		public uint UInt32Sample { get; set; }

		/// <summary>
		/// long value
		/// </summary>
		public long Int64Sample { get; set; }

		/// <summary>
		/// ulong value
		/// </summary>
		public ulong UInt64Sample { get; set; }

		/// <summary>
		/// float value
		/// </summary>
		public float SingleSample { get; set; }

		/// <summary>
		/// double value
		/// </summary>
		public double DoubleSample { get; set; }

		/// <summary>
		/// decimal value
		/// </summary>
		public decimal DecimalSample { get; set; }

		/// <summary>
		/// enum value
		/// </summary>
		public int EnumSampleIntValue { get; set; }

		/// <summary>
		/// enum value
		/// </summary>
		public EnumSampleEnum EnumSample => (EnumSampleEnum)EnumSampleIntValue;

		/// <summary>
		/// string array
		/// </summary>
		public string[] StringArraySample { get; set; }

		/// <summary>
		/// bool array
		/// </summary>
		public bool[] BooleanArraySample { get; set; }

		/// <summary>
		/// byte array
		/// </summary>
		public byte[] ByteArraySample { get; set; }

		/// <summary>
		/// sbyte array
		/// </summary>
		public sbyte[] SByteArraySample { get; set; }

		/// <summary>
		/// short array
		/// </summary>
		public short[] Int16ArraySample { get; set; }

		/// <summary>
		/// ushort array
		/// </summary>
		public ushort[] UInt16ArraySample { get; set; }

		/// <summary>
		/// int array
		/// </summary>
		public int[] Int32ArraySample { get; set; }

		/// <summary>
		/// uint array
		/// </summary>
		public uint[] UInt32ArraySample { get; set; }

		/// <summary>
		/// long array
		/// </summary>
		public long[] Int64ArraySample { get; set; }

		/// <summary>
		/// ulong array
		/// </summary>
		public ulong[] UInt64ArraySample { get; set; }

		/// <summary>
		/// float array
		/// </summary>
		public float[] SingleArraySample { get; set; }

		/// <summary>
		/// double array
		/// </summary>
		public double[] DoubleArraySample { get; set; }

		/// <summary>
		/// decimal array
		/// </summary>
		public decimal[] DecimalArraySample { get; set; }

		/// <summary>
		/// Initializes a new instance of the <see cref="SampleMetadata"/> class.
		/// </summary>
		[Preserve]
		public SampleMetadata()
		{
		}
	}
}
